FUNCTION_BLOCK "FB1521_EnviroPro_TCPClient"
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      Enable : Bool;
      EN_R : Bool;
      ID : CONN_OUC := 16#0001;
      PORT : UInt := 4196;
      IP_1 : Byte := 192;
      IP_2 : Byte := 168;
      IP_3 : Byte := 1;
      IP_4 : Byte := 200;
   END_VAR

   VAR_OUTPUT 
      RCV_DONE : Bool;
      RCV_BUSY : Bool;
      RCV_ERROR : Bool;
      RCV_STATUS : Word;
      SEND_DONE : Bool;
      SEND_BUSY : Bool;
      SEND_ERROR : Bool;
      SEND_STATUS : Word;
   END_VAR

   VAR_IN_OUT 
      COM_RST : Bool;
   END_VAR

   VAR 
      CONNECT {InstructionName := 'TCON_IP_v4'; LibVersion := '1.0'; S7_SetPoint := 'False'} : TCON_IP_v4 := (64, 16#0001, (), TRUE, ([()]), (), ());
      RCV_DATA : Array[1..90] of Char;
      RCV_VWC : Array[1..9] of Real;
      RCV_ECe : Array[1..9] of Real;
      RCV_TEMP : Array[1..9] of Real;
      Done_Old : Bool;
      Pos_R : Int;
      TRCV_C {InstructionName := 'TRCV_C'; LibVersion := '3.2'; S7_SetPoint := 'False'} : TRCV_C;
      TSEND_C {InstructionName := 'TSEND_C'; LibVersion := '3.2'} : TSEND_C;
      Send_Cmd : String[12] := '7C!<CR><LF>';
      Count_Cmd : Int;
      TON_1 {InstructionName := 'TON_TIME'; LibVersion := '1.0'} : TON_TIME;
      TON_2 {InstructionName := 'TON_TIME'; LibVersion := '1.0'} : TON_TIME;
      QT1 { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool;
      QT2 { ExternalAccessible := 'False'; ExternalVisible := 'False'; ExternalWritable := 'False'} : Bool;
   END_VAR

   VAR_TEMP 
      ResetData : Array[1..90] of Char;
      RCV_Temp1 : Array[1..90] of Char;
      Cmd_VWC : UInt;
      Cmd_ECe : UInt;
      Cmd_TEMP : UInt;
      Cmd_VWC_String : String[10];
      Cmd_ECe_String : String[10];
      Cmd_TEMP_String : String[10];
      String_Temp_1 : String[90];
      String_Temp_2 : String[90];
      String_Temp_3 : String[90];
   END_VAR


BEGIN
	REGION Initial
	    #CONNECT.ID := #ID;
	    #CONNECT.RemotePort := #PORT;
	    #CONNECT.RemoteAddress.ADDR[1] := #IP_1;
	    #CONNECT.RemoteAddress.ADDR[2] := #IP_2;
	    #CONNECT.RemoteAddress.ADDR[3] := #IP_3;
	    #CONNECT.RemoteAddress.ADDR[4] := #IP_4;
	    #TSEND_C(REQ:= #EN_R,
	             CONT:=#Enable,
	             LEN:=0,
	             DONE=>#SEND_DONE,
	             BUSY=>#SEND_BUSY,
	             ERROR=>#SEND_ERROR,
	             STATUS=>#SEND_STATUS,
	             CONNECT:=#CONNECT,
	             DATA:=#Send_Cmd,
	             COM_RST:=#COM_RST);
	    #TRCV_C(EN_R := #SEND_DONE,
	            CONT :=#Enable,
	            LEN := 80,
	            ADHOC := TRUE,
	            DONE => #RCV_DONE,
	            BUSY => #RCV_BUSY,
	            ERROR => #RCV_ERROR,
	            STATUS => #RCV_STATUS,
	            CONNECT := #CONNECT,
	            DATA := #RCV_Temp1,
	            COM_RST := #COM_RST);
	END_REGION
	
	REGION Split Data
	    IF #TRCV_C.DONE AND NOT #Done_Old THEN
	        #RCV_DATA := #RCV_Temp1;
	        #RCV_Temp1 := #ResetData;
	    END_IF;
	
	    //Read VWC 7C3!<CR><LF>
	    IF #Count_Cmd = 0 THEN
	        #Send_Cmd := '7C!<CR><LF>';
	        Chars_TO_Strg(Chars := #RCV_DATA,
	                      pChars := 0,
	                      Cnt := 0,
	                      Strg => #String_Temp_1);
	        Chars_TO_Strg(Chars := #RCV_DATA,
	                      pChars := 0,
	                      Cnt := 10,
	                      Strg => #Cmd_VWC_String);
	        #Cmd_VWC := STRING_TO_UINT(#Cmd_VWC_String);
	        IF #Cmd_VWC > 10 THEN
	            #Send_Cmd := '7D0!<CR><LF>';
	        END_IF;
	        IF (FIND(IN1 := #String_Temp_1, IN2 := '+') > 0) THEN
	            "FC1522_Split_EnviroPro"(In_String:=#String_Temp_1, RCV_DATA=>#RCV_VWC);
	            #RCV_DATA := #ResetData;
	            #Count_Cmd := 1;
	        END_IF;
	    END_IF;
	    //Read ECe
	    IF #Count_Cmd = 1 THEN
	        #Send_Cmd := '7C1!<CR><LF>';
	        Chars_TO_Strg(Chars := #RCV_DATA,
	                      pChars := 0,
	                      Cnt := 0,
	                      Strg => #String_Temp_2);
	        Chars_TO_Strg(Chars := #RCV_DATA,
	                      pChars := 0,
	                      Cnt := 10,
	                      Strg => #Cmd_ECe_String);
	        #Cmd_ECe := STRING_TO_UINT(#Cmd_ECe_String);
	        IF #Cmd_ECe > 10 THEN
	            #Send_Cmd := '7D0!<CR><LF>';
	        END_IF;
	        IF (FIND(IN1 := #String_Temp_2, IN2 := '+') > 0) THEN
	            "FC1522_Split_EnviroPro"(In_String := #String_Temp_2, RCV_DATA => #RCV_ECe);
	            #RCV_DATA := #ResetData;
	            #Count_Cmd := 2;
	        END_IF;
	    END_IF;
	    //Read TEMP
	    IF #Count_Cmd = 2 THEN
	        #Send_Cmd := '7C2!<CR><LF>';
	        Chars_TO_Strg(Chars := #RCV_DATA,
	                      pChars := 0,
	                      Cnt := 0,
	                      Strg => #String_Temp_3);
	        Chars_TO_Strg(Chars := #RCV_DATA,
	                      pChars := 0,
	                      Cnt := 10,
	                      Strg => #Cmd_TEMP_String);
	        #Cmd_TEMP := STRING_TO_UINT(#Cmd_TEMP_String);
	        IF #Cmd_TEMP > 10 THEN
	            #Send_Cmd := '7D0!<CR><LF>';
	        END_IF;
	        IF (FIND(IN1 := #String_Temp_3, IN2 := '+') > 0) THEN
	            "FC1522_Split_EnviroPro"(In_String := #String_Temp_3, RCV_DATA => #RCV_TEMP);
	           #RCV_DATA := #ResetData;
	            #Count_Cmd := 0;
	        END_IF;
	    END_IF;
	END_REGION
	
	#Done_Old := #TRCV_C.DONE;
	
	REGION Restart Comunication
	    #TON_1(IN := (NOT #SEND_DONE AND NOT #QT2),
	           PT := T#5s,
	           Q => #QT1);
	    #TON_2(IN := #QT1,
	           PT := T#1s,
	           Q => #QT2);
	    #COM_RST := #QT1;
	    IF #COM_RST THEN
	        #Count_Cmd := 0;
	    END_IF;
	    
	END_REGION
	
END_FUNCTION_BLOCK

